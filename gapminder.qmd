---
title: "Quarto Basics"
format:
  html:
    code-fold: true
jupyter: python3
---

This document demonstrates how to load and visualize the Gapminder dataset directly from a DuckDB database using Python, Pandas, and Plotly.

First, we'll import the necessary libraries: duckdb for database interaction, pandas for data manipulation, and plotly.express for creating interactive plots.

```{python}
import duckdb
import pandas as pd
import plotly.express as px

# --- Configuration ---
DUCKDB_FILE = '/gapminder.duckdb'
TABLE_NAME = 'gapminder'

# --- Database Connection and Data Loading ---
try:
    # Connect to the DuckDB database
    con = duckdb.connect(database=DUCKDB_FILE, read_only=True)

    # Query the data from the specified table
    query = f"SELECT * FROM {TABLE_NAME}"
    df = con.execute(query).fetchdf()
    print(f"Loaded {len(df)} rows from '{TABLE_NAME}'.")

except duckdb.Error as e:
    print(f"Error connecting to or querying DuckDB: {e}")
    print("Please ensure the DuckDB file path is correct and the table exists.")
    # Create an empty DataFrame to prevent errors in plotting if data loading fails
    df = pd.DataFrame(columns=['country', 'continent', 'year', 'lifeExp', 'pop', 'gdpPercap'])

finally:
    # Close the connection
    if 'con' in locals() and con:
        con.close()
        print("DuckDB connection closed.")

# --- Data Visualization ---
if not df.empty:
    print("Generating plot...")
    fig = px.scatter(df,
                     x="gdpPercap",
                     y="lifeExp",
                     size="pop",
                     color="continent",
                     hover_name="country",
                     log_x=True,
                     size_max=60,
                     animation_frame="year",
                     animation_group="country",
                     title="Gapminder Data: Life Expectancy vs. GDP Per Capita Over Time")

    # Update layout for better aesthetics
    fig.update_layout(
        font_family="Inter",
        title_font_size=24,
        xaxis_title="GDP Per Capita (log scale)",
        yaxis_title="Life Expectancy (Years)",
        margin=dict(l=40, r=40, t=40, b=40),
        plot_bgcolor="#f8f8f8",
        paper_bgcolor="#ffffff",
        hoverlabel=dict(bgcolor="white", font_size=16, font_family="Inter")
    )

    # Display the plot
    fig.show()
else:
    print("No data loaded. Cannot generate plot.")
```

### Plot Description
The interactive scatter plot above visualizes the relationship between a country's GDP per capita and its life expectancy over time. Each bubble represents a country, with its size indicating the population and its color representing the continent. You can use the slider at the bottom to animate the data through different years.

This setup allows for dynamic data loading and visualization, making it easy to update your plots as your DuckDB data changes.